<Application x:Class="Valil.Chess.WinFX.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    StartupUri="MainPage.xaml"
	  Startup="AppStartup"
    LoadCompleted="AppLoadCompleted"
    SessionEnding="AppSessionEnding"
	  Exit="AppExit"
    ShutdownMode="OnMainWindowClose"
    >
  <Application.Resources>
    <!-- Defines the drawing brush for the toolbar and status bar backgrounds -->
    <LinearGradientBrush x:Key="Valil.Chess.BarsBackground" 
      StartPoint="0,0" EndPoint="0,1.5" 
      MappingMode="Absolute" SpreadMethod="Reflect">
      <LinearGradientBrush.GradientStops>
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="White" Offset="0.98"/>
        <GradientStop Color="Black" Offset="0.98"/>
        <GradientStop Color="Black" Offset="1"/>
      </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <!-- Defines the scrollbar resources -->
    <Style x:Key="ScrollBar_LineButton" TargetType="{x:Type RepeatButton}">
      <Setter Property="OverridesDefaultStyle" Value="true" />
      <Setter Property="Focusable" Value="false" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Border x:Name="Border" CornerRadius="2" BorderBrush="Silver" 
                    BorderThickness="1">
              <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                  <LinearGradientBrush.GradientStops>
                    <GradientStop Offset="0" Color="White"/>
                    <GradientStop Offset="1" Color="#CDCDCD"/>
                  </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
              </Border.Background>
              <Path HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Fill="Gray" 
                    Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background">
                  <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                      <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0" Color="White"/>
                        <GradientStop Offset="1" Color="#E0E0E0"/>
                      </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
              </Trigger>
              <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background">
                  <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                      <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0" Color="#EEEEEE"/>
                        <GradientStop Offset="1" Color="#DFDFDF"/>
                      </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ScrollBar_PageButton" TargetType="{x:Type RepeatButton}">
      <Setter Property="OverridesDefaultStyle" Value="true" />
      <Setter Property="IsTabStop" Value="false" />
      <Setter Property="Focusable" Value="false" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Rectangle Fill="Transparent" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ScrollBar_Thumb" TargetType="{x:Type Thumb}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Border CornerRadius="3" BorderBrush="Silver" BorderThickness="1">
              <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                  <LinearGradientBrush.GradientStops>
                    <GradientStop Offset="0" Color="White"/>
                    <GradientStop Offset="1" Color="#E4E4E4"/>
                  </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
              </Border.Background>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <!-- Defines the scrollbar style -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
      <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
      <Setter Property="Background" Value="#FBFBFB" />
      <Setter Property="Width" Value="16" />
      <Setter Property="MinWidth" Value="16" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ScrollBar}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="16" />
                <RowDefinition Height="*"/>
                <RowDefinition Height="16" />
              </Grid.RowDefinitions>
              <RepeatButton Grid.Row="0" 
                            Style="{StaticResource ScrollBar_LineButton}"                               Command="ScrollBar.LineUpCommand" 
                            Content="M 0 4 L 7 4 L 3.5 0 Z" />
              <Border Grid.Row="1" BorderBrush="Silver" BorderThickness="1"                    Background="{TemplateBinding Background}" CornerRadius="2" />
              <Track Grid.Row="1" Name="PART_Track" IsDirectionReversed="true">
                <Track.Thumb>
                  <Thumb Style="{StaticResource ScrollBar_Thumb}" />
                </Track.Thumb>
                <Track.DecreaseRepeatButton>
                  <RepeatButton Style="{StaticResource ScrollBar_PageButton}" Command="ScrollBar.PageUpCommand"/>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Style="{StaticResource ScrollBar_PageButton}" Command="ScrollBar.PageDownCommand"/>
                </Track.IncreaseRepeatButton>
              </Track>
              <RepeatButton Grid.Row="2" 
                 Style="{StaticResource ScrollBar_LineButton}" Command="ScrollBar.LineDownCommand" 
                 Content="M 0 0 L 3.5 4 L 7 0 Z" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="Orientation" Value="Horizontal">
          <Setter Property="Width" Value="Auto" />
          <Setter Property="MinWidth" Value="0" />
          <Setter Property="Height" Value="16" />
          <Setter Property="MinHeight" Value="16" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ScrollBar}">
                <Grid Background="{TemplateBinding Background}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="16" />
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="16" />
                  </Grid.ColumnDefinitions>
                  <RepeatButton Grid.Column="0" 
                     Style="{StaticResource ScrollBar_LineButton}"   
                     Command="ScrollBar.LineLeftCommand" 
                     Content="M 0 4 L 4 8 L 4 0 Z" />
                  <Border Grid.Column="1" BorderBrush="Silver" 
                          BorderThickness="1" 
                          Background="{TemplateBinding Background}" 
                          CornerRadius="2" />
                  <Track Grid.Column="1" Name="PART_Track" IsDirectionReversed="true">
                    <Track.Thumb>
                      <Thumb Style="{StaticResource ScrollBar_Thumb}" />
                    </Track.Thumb>
                    <Track.DecreaseRepeatButton>
                      <RepeatButton Style="{StaticResource ScrollBar_PageButton}" Command="ScrollBar.PageLeftCommand"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                      <RepeatButton Style="{StaticResource ScrollBar_PageButton}" Command="ScrollBar.PageRightCommand"/>
                    </Track.IncreaseRepeatButton>
                  </Track>
                  <RepeatButton Grid.Column="2" 
                       Style="{StaticResource ScrollBar_LineButton}" 
                       Command="ScrollBar.LineRightCommand" 
                       Content="M 0 0 L 0 8 L 4 4 Z" />
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Trigger>
      </Style.Triggers>
    </Style>
    <!-- Data template for the move history list items -->
    <DataTemplate x:Key="MoveDescriptionTemplate">
      <TextBlock Text="{Binding}" Focusable="False"/>
    </DataTemplate>
    <!-- Defines the button styles -->
    <Style x:Key="Valil.Chess.GelButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="OverridesDefaultStyle" Value="true" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Grid ClipToBounds="False">
              <!-- columns and row definitions -->
              <Grid.ColumnDefinitions>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
              </Grid.RowDefinitions>
              <!-- The shadow -->
              <Rectangle x:Name="shadow" 
								Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" 
								Fill="Black" 
								RadiusX="10" RadiusY="10" 
								Opacity=".3"
								Margin="1"
								>
                <Rectangle.BitmapEffect>
                  <BlurBitmapEffect Radius="2"/>
                </Rectangle.BitmapEffect>
                <Rectangle.RenderTransform>
                  <TranslateTransform X="1" Y="1"/>
                </Rectangle.RenderTransform>
              </Rectangle>
              <!-- The background -->
              <Rectangle x:Name="background"
								Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" 
								Fill="{TemplateBinding Property=Background}"
								Stroke="{TemplateBinding Property=BorderBrush}"
								RadiusX="10" RadiusY="10" 
								Margin="1"
								/>
              <!-- The content -->
              <ContentPresenter x:Name="content"
								Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" 
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{TemplateBinding Content}"
								Margin="1"
								/>
              <!-- The highlight -->
              <Rectangle x:Name="highlight" 
								Grid.Column="0" Grid.Row="0" 								
								RadiusX="5" RadiusY="5"
								Margin="5,3,5,1"
								>
                <Rectangle.BitmapEffect>
                  <BlurBitmapEffect Radius="1"/>
                </Rectangle.BitmapEffect>
                <Rectangle.Fill>
                  <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#ffff" Offset="0"/>
                      <GradientStop Color="#0fff" Offset="1"/>
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Rectangle.Fill>
              </Rectangle>
            </Grid>
            <!-- The triggers -->
            <ControlTemplate.Triggers>
              <!-- The look on disabled buttons -->
              <Trigger Property="Button.IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray"/>
              </Trigger>
              <!-- Button pressed trigger; hide the highlight and hide the shadow under the button -->
              <Trigger Property="Button.IsPressed" Value="True">
                <Setter TargetName="highlight" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="shadow" Property="Visibility" Value="Collapsed"/>
              </Trigger>
              <!-- Mouse enter trigger -->
              <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <EventTrigger.Actions>
                  <BeginStoryboard>
                    <!-- Mouse enter - animate the shadow by translating it -->
                    <Storyboard>
                      <DoubleAnimation 
                        Storyboard.TargetProperty="(Rectangle.RenderTransform).(TranslateTransform.X)" 
                        Storyboard.TargetName="shadow" 
                        To="3" DecelerationRatio="1" Duration="0:0:0.25" 
                        FillBehavior="HoldEnd" />
                      <DoubleAnimation 
                        Storyboard.TargetProperty="(Rectangle.RenderTransform).(TranslateTransform.Y)" 
                        Storyboard.TargetName="shadow" 
                        To="3" DecelerationRatio="1" Duration="0:0:0.25" 
                        FillBehavior="HoldEnd" />
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger.Actions>
              </EventTrigger>
              <!-- Mouse leave trigger -->
              <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <EventTrigger.Actions>
                  <BeginStoryboard>
                    <!-- Mouse leave - animate the shadow by translating it back -->
                    <Storyboard>
                      <DoubleAnimation 
                        Storyboard.TargetProperty="(Rectangle.RenderTransform).(TranslateTransform.X)" 
                        Storyboard.TargetName="shadow" 
                        To="1" DecelerationRatio="1" Duration="0:0:0.25" 
                        FillBehavior="HoldEnd" />
                      <DoubleAnimation 
                        Storyboard.TargetProperty="(Rectangle.RenderTransform).(TranslateTransform.Y)" 
                        Storyboard.TargetName="shadow" 
                        To="1" DecelerationRatio="1" Duration="0:0:0.25" 
                        FillBehavior="HoldEnd" />
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger.Actions>
              </EventTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="Valil.Chess.ToolBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource Valil.Chess.GelButtonStyle}">
      <Setter Property="Width" Value="42"/>
      <Setter Property="Height" Value="32"/>
      <Setter Property="Margin" Value="5,2,5,2"/>
      <Setter Property="BorderBrush" Value="Black"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Focusable" Value="False"/>
      <Setter Property="Background">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="#00aa00" Offset="0"/>
              <GradientStop Color="#aaffaa" Offset="1"/>
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
    </Style>
    <!-- Defines the icon styles -->
    <Style x:Key="Valil.Chess.IconStyle" TargetType="{x:Type Path}">
      <Setter Property="OverridesDefaultStyle" Value="true" />
      <Setter Property="Stroke" Value="Black"/>
      <Setter Property="StrokeThickness" Value="2"/>
      <Setter Property="StrokeEndLineCap" Value="Round"/>
      <Setter Property="StrokeStartLineCap" Value="Round"/>
      <Setter Property="StrokeLineJoin" Value="Round"/>
    </Style>
    <Style x:Key="Valil.Chess.NewGameIconStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource Valil.Chess.IconStyle}">
      <Setter Property="Fill" Value="Beige" />
      <Setter Property="Data" Value="F1 M3,0 v20 h15 v-12 l-8,-8 v8 h8 l-8,-8 h-7"/>
    </Style>
    <Style x:Key="Valil.Chess.OpenGameIconStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource Valil.Chess.IconStyle}">
      <Setter Property="Fill">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0.6,0" EndPoint="0.4,1">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="White" Offset="0.2"/>
              <GradientStop Color="Yellow" Offset="1"/>
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Data" Value="F1 M3,5 v-3 l18,3 v18 l-18,-3 l-3,-15 l18,3 l3,15 l-18,-3"/>
    </Style>
    <Style x:Key="Valil.Chess.SaveGameIconStyle" TargetType="{x:Type Path}">
      <Setter Property="Fill">
        <Setter.Value>
          <DrawingBrush>
            <DrawingBrush.Drawing>
              <DrawingGroup>
                <DrawingGroup.Children>
                  <GeometryDrawing>
                    <GeometryDrawing.Geometry>
                      <RectangleGeometry Rect="0,0,20,20" RadiusX="4" RadiusY="4"/>
                    </GeometryDrawing.Geometry>
                    <GeometryDrawing.Brush>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <LinearGradientBrush.GradientStops>
                          <GradientStop Color="#4286a5" Offset="0"/>
                          <GradientStop Color="#216d8c" Offset="1"/>
                        </LinearGradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </GeometryDrawing.Brush>
                    <GeometryDrawing.Pen>
                      <Pen Brush="#000000" />
                    </GeometryDrawing.Pen>
                  </GeometryDrawing>
                  <GeometryDrawing>
                    <GeometryDrawing.Geometry>
                      <RectangleGeometry Rect="3,1,14,9"/>
                    </GeometryDrawing.Geometry>
                    <GeometryDrawing.Brush>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <LinearGradientBrush.GradientStops>
                          <GradientStop Color="#ffffff" Offset="0.5"/>
                          <GradientStop Color="#c0c8e0" Offset="1"/>
                        </LinearGradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </GeometryDrawing.Brush>
                    <GeometryDrawing.Pen>
                      <Pen Brush="#7078e0" />
                    </GeometryDrawing.Pen>
                  </GeometryDrawing>
                  <GeometryDrawing>
                    <GeometryDrawing.Geometry>
                      <RectangleGeometry Rect="5,13,10,6"/>
                    </GeometryDrawing.Geometry>
                    <GeometryDrawing.Brush>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <LinearGradientBrush.GradientStops>
                          <GradientStop Color="#888888" Offset="0.5"/>
                          <GradientStop Color="#777777" Offset="1"/>
                        </LinearGradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </GeometryDrawing.Brush>
                    <GeometryDrawing.Pen>
                      <Pen Brush="#555555" />
                    </GeometryDrawing.Pen>
                  </GeometryDrawing>
                </DrawingGroup.Children>
              </DrawingGroup>
            </DrawingBrush.Drawing>
          </DrawingBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Data" Value="F1 M0,0 h20 v20 h-20 v-20"/>
    </Style>
    <Style x:Key="Valil.Chess.GoToFirstIconStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource Valil.Chess.IconStyle}">
      <Setter Property="Fill" Value="Black" />
      <Setter Property="Data" Value="M7,12 l14,-10 v20 l-14,-10 m-5,-10 h5 v20 h-5 v-20"/>
    </Style>
    <Style x:Key="Valil.Chess.GoToPreviousIconStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource Valil.Chess.IconStyle}">
      <Setter Property="Fill" Value="Black" />
      <Setter Property="Data" Value="M0,12 l14,-10 v20 l-14,-10"/>
    </Style>
    <Style x:Key="Valil.Chess.GoToNextIconStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource Valil.Chess.IconStyle}">
      <Setter Property="Fill" Value="Black" />
      <Setter Property="Data" Value="M20,12 l-14,-10 v20 l14,-10"/>
    </Style>
    <Style x:Key="Valil.Chess.GoToLastIconStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource Valil.Chess.IconStyle}">
      <Setter Property="Fill" Value="Black" />
      <Setter Property="Data" Value="M17,12 l-14,-10 v20 l14,-10 m0,-10 h5 v20 h-5 v-20"/>
    </Style>
    <Style x:Key="Valil.Chess.ForceAIMoveIconStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource Valil.Chess.IconStyle}">
      <Setter Property="Fill" Value="Beige" />
      <Setter Property="Data" Value="M7,2 h10 a3,3 0 0,1 3,3 v5 a3,3 0 0,1 -3,3 h-10 a3,3 0 0,1 -3,-3 v-5 a3,3 0 0,1 3,-3 
					m-2.5,13 h15 a3,3 0 0,1 3,3 a3,3 0 0,1 -3,3 h-15 a3,3 0 0,1 -3,-3 a3,3 0 0,1 3,-3"/>
    </Style>
    <Style x:Key="Valil.Chess.RotateBoardIconStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource Valil.Chess.IconStyle}">
      <Setter Property="Fill" Value="Beige" />
      <Setter Property="Data" Value="M7,2 a12,12 0 0,0 0,18 l-3,3 l9,0 l0,-9 l-3,3 a9,9 0 0,1 0,-12 l-3,-3
					m12,21 a12,12 0 0,0 0,-18 l3,-3 l-9,0 l0,9 l3,-3 a9,9 0 0,1 0,12 l3,3"/>
    </Style>
    <!-- Defines the toolbar label style -->
    <Style x:Key="Valil.Chess.ToolBarLabelStyle" TargetType="{x:Type Label}">
      <Setter Property="OverridesDefaultStyle" Value="true" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate>
            <Border
					    BorderBrush="Black" BorderThickness="1,2,1,2" 
					    CornerRadius="3"
					    Padding="1" 
              MinWidth="50"
              MinHeight="30"
					    >
              <Border.Background>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                  <LinearGradientBrush.GradientStops>
                    <GradientStop Color="#ffaaaa" Offset="0"/>
                    <GradientStop Color="#ffeeee" Offset="1"/>
                  </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
              </Border.Background>
              <TextBlock
                  HorizontalAlignment="Center" VerticalAlignment="Center"    
                  ToolTip="{TemplateBinding ToolTip}"
                  Text="{TemplateBinding ContentControl.Content}"
					    >
              </TextBlock>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Application.Resources>
</Application>
