<Page x:Class="Valil.Chess.WinFX.Chess3DPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  Title="Valil.Chess.WinFX - 3D version"
    WindowTitle="Valil.Chess.WinFX - 3D version"
	  xmlns:c="clr-namespace:Valil.Chess.WinFX.VisualElements;assembly=Valil.Chess.WinFX.VisualElements"
    xmlns:l="clr-namespace:Valil.Chess.WinFX"
	  Loaded="PageLoaded"
    Unloaded="PageUnloaded"
    Cursor="Arrow"
    SnapsToDevicePixels="True"
    >
    <Page.CommandBindings>
        <CommandBinding Command="ApplicationCommands.New" Executed="NewCommand"/>
        <CommandBinding Command="ApplicationCommands.Open" Executed="OpenCommand"/>
        <CommandBinding Command="ApplicationCommands.Save" Executed="SaveCommand"/>
        <CommandBinding Command="l:CustomCommands.First" Executed="FirstCommand"/>
        <CommandBinding Command="l:CustomCommands.Previous" Executed="PreviousCommand"/>
        <CommandBinding Command="l:CustomCommands.Next" Executed="NextCommand"/>
        <CommandBinding Command="l:CustomCommands.Last" Executed="LastCommand"/>
        <CommandBinding Command="l:CustomCommands.Move" Executed="MoveCommand" CanExecute="CanMoveCommand"/>
        <CommandBinding Command="l:CustomCommands.Rotate" Executed="RotateCommand"/>
        <CommandBinding Command="l:CustomCommands.Select" Executed="SelectCommand"/>
    </Page.CommandBindings>
    <Page.Resources>
        <!-- Defines the list box style -->
        <Style x:Key="Valil.Chess.SemitransparentListBoxStyle" TargetType="{x:Type ItemsControl}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="#ccddff" Offset="0"/>
                            <GradientStop Color="#e0f0ff" Offset="1"/>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="100" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="ToolTip" Value="Move history" />
            <Setter Property="BorderBrush" Value="#ccddff" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <!-- The background -->
                            <Rectangle Fill="{TemplateBinding Property=Background}" 
								Stroke="{TemplateBinding Property=BorderBrush}"
								Focusable="False" 
								RadiusX="3" RadiusY="3"
								Opacity=".5"
								/>
                            <!-- The items host with scrolling capabilities -->
                            <Grid>
                                <ScrollViewer Margin="5" Focusable="False">
                                    <StackPanel IsItemsHost="True" Opacity="1" Focusable="False"/>
                                </ScrollViewer>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Defines the status bar style -->
        <Style x:Key="Valil.Chess.SemitransparentStatusBarStyle" TargetType="{x:Type StatusBar}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="{StaticResource Valil.Chess.BarsBackground}" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <!-- The background -->
                            <Rectangle Fill="{TemplateBinding Property=Background}" 
								Stroke="{TemplateBinding Property=BorderBrush}"
								Focusable="False" 
								RadiusX="3" RadiusY="3" 
								Opacity=".5"
								/>
                            <!-- The items host -->
                            <StackPanel Orientation="Horizontal" IsItemsHost="True" Focusable="False"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Defines the tool bar style -->
        <Style x:Key="Valil.Chess.SemitransparentToolBarStyle" TargetType="{x:Type ToolBar}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="{StaticResource Valil.Chess.BarsBackground}" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <!-- The background -->
                            <Rectangle Fill="{TemplateBinding Property=Background}" 
								Stroke="{TemplateBinding Property=BorderBrush}"
								Focusable="False" 
								RadiusX="3" RadiusY="3" 
								Opacity=".5"
								/>
                            <!-- The items host -->
                            <StackPanel Orientation="Horizontal" IsItemsHost="True" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <!-- The game board -->
        <c:GameBoard3D Name="gameBoard" Grid.Row="0" Grid.Column="0"/>
        <DockPanel LastChildFill="False" Grid.Row="0" Grid.Column="0">
            <!-- The toolbar -->
            <ToolBar Style="{StaticResource Valil.Chess.SemitransparentToolBarStyle}" 
        DockPanel.Dock="Top"
			  >
                <!-- New game button -->
                <Button Style="{StaticResource Valil.Chess.ToolBarButtonStyle}" 
          ToolTip="New" 
          Command="ApplicationCommands.New"
				>
                    <Path Style="{StaticResource Valil.Chess.NewGameIconStyle}"/>
                </Button>
                <!-- Open game button -->
                <Button Style="{StaticResource Valil.Chess.ToolBarButtonStyle}" 
          ToolTip="Open" 
          Command="ApplicationCommands.Open"
				>
                    <Path Style="{StaticResource Valil.Chess.OpenGameIconStyle}"/>
                </Button>
                <!-- Save game button -->
                <Button Style="{StaticResource Valil.Chess.ToolBarButtonStyle}" 
          ToolTip="Save" 
          Command="ApplicationCommands.Save"
				>
                    <Path Style="{StaticResource Valil.Chess.SaveGameIconStyle}"/>
                </Button>
                <Separator/>
                <!-- Go to first button -->
                <Button Style="{StaticResource Valil.Chess.ToolBarButtonStyle}" 
          ToolTip="First" 
          Command="l:CustomCommands.First"
				>
                    <Path Style="{StaticResource Valil.Chess.GoToFirstIconStyle}"/>
                </Button>
                <!-- Go to previous button -->
                <Button Style="{StaticResource Valil.Chess.ToolBarButtonStyle}" 
          ToolTip="Previous" 
          Command="l:CustomCommands.Previous"
				>
                    <Path Style="{StaticResource Valil.Chess.GoToPreviousIconStyle}"/>
                </Button>
                <!-- Go to next button -->
                <Button Style="{StaticResource Valil.Chess.ToolBarButtonStyle}" 
          ToolTip="Next" 
          Command="l:CustomCommands.Next"
				>
                    <Path Style="{StaticResource Valil.Chess.GoToNextIconStyle}"/>
                </Button>
                <!-- Go to last button -->
                <Button Style="{StaticResource Valil.Chess.ToolBarButtonStyle}" 
          ToolTip="Last" 
          Command="l:CustomCommands.Last"
				>
                    <Path Style="{StaticResource Valil.Chess.GoToLastIconStyle}"/>
                </Button>
                <Separator/>
                <!-- Force AI move button -->
                <Button Style="{StaticResource Valil.Chess.ToolBarButtonStyle}" 
          ToolTip="Force AI move"
          Command="l:CustomCommands.Move"
				>
                    <Path Style="{StaticResource Valil.Chess.ForceAIMoveIconStyle}"/>
                </Button>
                <!-- Rotate board button -->
                <Button Style="{StaticResource Valil.Chess.ToolBarButtonStyle}" 
          ToolTip="Rotate board" 
          Command="l:CustomCommands.Rotate"
				>
                    <Path Style="{StaticResource Valil.Chess.RotateBoardIconStyle}"/>
                </Button>
            </ToolBar>
            <!-- The status bar -->
            <StatusBar Style="{StaticResource Valil.Chess.SemitransparentStatusBarStyle}" 
        DockPanel.Dock="Bottom" 
			  >
                <!-- Game status label; databinded to game status -->
                <StatusBarItem Name="gameStatusItem">
                    <Label Style="{StaticResource Valil.Chess.ToolBarLabelStyle}"
                Content="{Binding Path=GameStatusText, Mode=OneWay}"
                ToolTip="Game status"
					/>
                </StatusBarItem>
                <!-- Side to move label; databinded to side to move -->
                <StatusBarItem Name="sideToMoveItem">
                    <Label Style="{StaticResource Valil.Chess.ToolBarLabelStyle}"
                Content="{Binding Path=SideToMoveText, Mode=OneWay}"
                ToolTip="Side to move"
					/>
                </StatusBarItem>
                <!-- Opponents info label; databinded to opponents info -->
                <StatusBarItem Name="oppInfoItem">
                    <Label Style="{StaticResource Valil.Chess.ToolBarLabelStyle}"
                Content="{Binding Path=OpponentsInfoText, Mode=OneWay}"
                ToolTip="Opponents info"
					/>
                </StatusBarItem>
                <!-- Speech recognition status label; databinded to speech recognition status -->
                <StatusBarItem Name="speechRecoItem">
                    <Label Style="{StaticResource Valil.Chess.ToolBarLabelStyle}"
                Content="{Binding Path=LastCommandText, Mode=OneWay}"
                ToolTip="Speech recognition status"
                MouseLeftButtonDown="SpeechStatusClicked"
					/>
                </StatusBarItem>
            </StatusBar>
            <!-- The move history list; databinded to move history description list-->
            <ItemsControl Name="moveHistory"
        Style="{StaticResource Valil.Chess.SemitransparentListBoxStyle}" 
        ItemsSource="{Binding}"
        ItemTemplate="{StaticResource MoveDescriptionTemplate}"
        DockPanel.Dock="Right" 
			  />
        </DockPanel>
    </Grid>
</Page>
